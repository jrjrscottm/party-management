swagger: '2.0'
info:
  title: Parties API
  description: Party Management
  version: "1.0.0"
host: api.jrjrnetworks.com
schemes:
  - https
securityDefinitions:
  api_authorization:
    type: oauth2
    description: jrjr oauth
    authorizationUrl: http://localhost:5000/connect/authorize
    tokenUrl: http://localhost:5000/connect/token
    flow: accessCode
    scopes: 
      profile: Read user profile information
      openid: Authenticate with OpenID
basePath: /v1
produces:
  - application/json
paths:
  /hosts:
    get:
      summary: Hosts
      description: | 
        The Hosts endpoint returns host information for previously hosted parties.
      tags: 
       - Hosts
      security:
        - api_authorization:
          - profile
          - openid
      responses:
        200:
          description: An array of Hosts
          schema:
            type: array
            items:
             $ref: '#/definitions/Host'
        400:
         description: 'Error'
         schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'
  /hosts/{host_id}/parties:
    get:
      summary: Get host parties
      description: |
       Get the previous and future parties registered for this host.
      tags:
       - Hosts
      security:
        - api_authorization:
          - profile
          - openid
      parameters:
       - name: host_id
         type: string
         required: true
         in: path
      responses:
        200:
          description: An array of Parties
          schema:
            type: array
            items:
              $ref: '#/definitions/Party'
        400:
         description: 'Error'
         schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'
  /parties:
    get:
      summary: Parties
      description: |
        The Parties endpoint returns information about the *Consultant* parties
        that have been created. They can include past or future parties.
      tags:
        - Parties
      security:
        - api_authorization:
          - profile
          - openid
      responses:
        200:
          description: An array of parties
          schema:
            type: array
            items:
              $ref: '#/definitions/Party'
        400:
         description: 'Error'
         schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'
    post:
      summary: Create a party
      tags:
       - Parties
      security:
        - api_authorization:
          - profile
          - openid
      parameters:
          - name: party
            in: body
            description: Add a new party
            required: true
            schema:
              $ref: '#/definitions/CreatePartyCommand'
      responses:
        201:
          headers: 
            Location:
              description: the URL of the created party
              type: string
          description: Party Created
        400:
         description: 'Error'
         schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'
  /parties/{id}:
    get:
      summary: Get a single party
      description: |
        The Parties endpoint returns information about the *Consultant* parties
        that have been created. They can include past or future parties.
      tags:
        - Parties
      security:
        - api_authorization:
          - profile
          - openid
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: An array of parties
          schema:
            $ref: '#/definitions/Party'
        400:
         description: 'Error'
         schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'
  /parties/{id}/invites:
    get:
      summary: Get the invites for the party
      description: | 
        pretty much that
        and more
      tags: 
       - Invites
      security:
        - api_authorization:
          - profile
          - openid
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: An array of invites
          schema:
            type: array
            items:
              $ref: '#/definitions/Invite'
        400:
         description: 'Error'
         schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'
    post:
      summary: Invite a person
      description: Invite someone to the party
      tags: 
       - Invites
      security:
        - api_authorization:
          - profile
          - openid
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: invite
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePartyInvite'
      responses:
        200: 
          description: Invite added
          schema:
            $ref: '#/definitions/Invite'
        400:
         description: 'Error'
         schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'
  /products:
    get:
      summary: Get Products
      description: |
        The Products endpoint gets products based on some criteria.
      tags:
        - Products
      security:
        - api_authorization:
          - profile
          - openid
      parameters:
        - name: page
          in: query
          type: number
          description: the page number
          required: false
        - name: page_size
          in: query
          type: number
          description: the page size
          required: false
      responses:
        200:
          description: An array or products
          schema:
            type: array
            items: 
              $ref: '#/definitions/Product'
        400:
          description: 'Error'
          schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'
  /products/{product_id}:
     get:
       summary: Get a Product
       description: |
         Gets details of a product by Product ID
       tags:
         - Products
       parameters:
         - name: product_id
           in: path
           required: true
           type: string
           descripion: The product unique identifier
       responses:
         200:
           description: An array of products
           schema:
             type: array
             items:
               $ref: '#/definitions/Product'
         400:
          description: 'Error'
          schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'       
  /categories:
    get:
      summary: Get Categories
      description: |
        The Categories endpoint gets categories based on some criteria.
      tags:
       - Categories
      security:
        - api_authorization:
          - profile
          - openid
      parameters:
       - name: page
         in: query
         type: number
         description: the page number
         required: false
       - name: page_size
         in: query
         description: the page size
         type: number
         required: false
      responses:
       200:
         description: An array or categories
         schema:
           type: array
           items: 
             $ref: '#/definitions/Category'
       400:
         description: 'Error'
         schema:
           $ref: 'responses.yaml#/definitions/ErrorResponse'
  /categories/{category_id}/products:
    get:
      summary: Get Category Products
      description: |
        Gets all products associated with a category.
      tags:
        - Categories
      security:
        - api_authorization:
          - profile
          - openId
      parameters:
        - name: category_id
          in: path
          required: true
          type: string
          descripion: the category ID
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        400:
          description: 'Error'
          schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'

  /orders:
    get:
     summary: Orders
     description: |
       Gets the logged in users most recent orders.
     tags:
      - Orders
     security:
       - api_authorization:
         - profile
         - openid
     responses:
       200:
         description: An array or Orders
         schema:
           type: array
           items:
             $ref: '#/definitions/Order'
       400:
         description: 'Error'
         schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'
    post:
      summary: Create an Order
      description: |
        Create an order for the given guest and party.
      tags:
        - Orders
      security:
        - api_authorization:
          - profile
          - openid
      parameters:
        - name: order
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateOrderCommand'
      responses:
        201:
          description: Order Created
          schema:
             $ref: '#/definitions/Order'
          headers: 
            Location:
              description: The URL to get the order
              type: string
        400:
          description: 'Error'
          schema:
             $ref: 'responses.yaml#/definitions/ErrorResponse'
  /orders/{order_id}:
    get:
     summary: Orders
     description: |
       Gets the logged in users most recent orders.
     tags:
      - Orders
     security:
       - api_authorization:
         - profile
         - openid
     parameters:
      - name: order_id
        in: path
        required: true
        type: string
     responses:
       200:
         description: Order detail
         schema:
          $ref: '#/definitions/Order'
       400:
         description: 'Error'
         schema:
          $ref: 'responses.yaml#/definitions/ErrorResponse'
  /orders/{order_id}/confirm:
    post:
     summary: Confirm Order
     description: |
      Submits the order for processing. Some changes may not be available.
     tags:
       - Orders
     security:
       - api_authorization:
         - profile
         - openid
     parameters:
      - name: order_id
        in: path
        required: true
        type: string
     responses:
      200:
        description: The order was confirmed
        schema:
         $ref: '#/definitions/Order'
      400:
        description: 'Error'
        schema:
         $ref: 'responses.yaml#/definitions/ErrorResponse'
  /parties/{party_id}/orders:
    get:
      summary: Get party orders
      description: |
        Gets all of the orders for a party whether confirmed or not.
      tags:
        - Parties
      security:
        - api_authorization:
          - profile
          - openid
      parameters:
        - name: party_id
          in: path
          required: true
          type: string
      responses:
        200:
          description: The orders for the party.
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        400:
          description: 'Error'
          schema:
            $ref: 'responses.yaml#/definitions/ErrorResponse'
definitions:
  CreatePartyCommand:
   type: object
   properties:
     name:
       type: string
       description: Party name assigned by the Consultant.
     host:
       $ref: '#/definitions/Host'
     address:
       $ref: 'common/entities.yaml#/definitions/Address'
     party_date:
       type: string
       format: date-time
       description: Date the party is scheduled to take place.
     invites:
       type: array
       items:
         $ref: '#/definitions/CreatePartyInvite'
  CreatePartyInvite:
    type: object
    allOf:
      - $ref: '#/definitions/Contact'
    properties:
      guest_id:
        type: string
        description: Unique identifier for the guest. Only present if they've attended other parties.
  Contact:
    type: object
    properties:
      first_name:
        type: string
        description: The person's first name         
      last_name:
        type: string
        description: The person's last name
      email:
        type: string
        description: The person's email address
      phone_number:
        type: string
        description: The person's phone number
      address:
        $ref: 'common/entities.yaml#/definitions/Address'
  Host:
    type: object
    allOf:
      - $ref: '#/definitions/Contact'
    properties:
      host_id:
        type: string
        description: Unique identifer representing the part host
  Invite:
    type: object
    properties:
      invite_id:
        type: string
        description: Unique identifier representing the invite for this contact/party combination
      guest_id:
        type: string
        description: Unique identifier for the guest who has attended a previous party.
      rsvp_status:
        type: string
        description: The status of the invite
      _links:
        type: array
        items: 
          $ref: '#/definitions/Link'
  Party:
   type: object
   properties:
     party_id:
       type: string
       description: Unique identifier representing a specific party.
     name:
       type: string
       description: The party name assigned by the Consultant.
     party_date:
       type: string
       format: date-time
       description: The date the party is scheduled to take place.
     party_created_date:
       type: string
       format: date-time
       description: The date the party was initially created.
     invites:
       type: array
       items:
         $ref: '#/definitions/Invite'
     _links:
       type: array
       items: 
         $ref: '#/definitions/Link'
  CreateOrderCommand:
    type: object
    properties:
      party_id:
        type: string
        description: Unique identifier representing the party this order is from.
      guest_id:
        type: string
        description: Unique identifier representing the guest that is placing the order.
      payment_token:
        type: string
        description: Unique identifier representing a validated payment method
      shipping_address:
        $ref: 'common/entities.yaml#/definitions/Address'
      line_items:
        type: array
        items:
          $ref: '#/definitions/CreateOrderLineItem'
  CreateOrderLineItem:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing the product_id
      quantity:
        type: string
        description: The number of items.
  LineItem:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing the product_id
      quantity:
        type: string
        description: The number of items.
      sub_total:
        type: number
        format: double
        description: the sub total for this line item.
  Order:
    type: object
    properties:
      order_id:
        type: string
        description: Unique identifier representing the order_id
      party_id:
        type: string
        description: Unique identifier representing the party this order was placed for.
      total:
        type: number
        format: double
        description: The order total including tax and any discounts.
      sub_total:
        type: number
        format: double
        description: The order total before tax or discounts.
      tax:
        type: number
        format: double
        description: The tax amount for the order.
      discount_total:
        type: number
        format: double
        description: The discount total.
      shipping_address:
        $ref: 'common/entities.yaml#/definitions/Address'
      line_items:
        type: array
        items:
          $ref: '#/definitions/LineItem'
      _links:
        type: array
        items: 
          $ref: '#/definitions/Link'
  Category:
    type: object
    properties:
     
      category_id:
        type: string
        description: Unique identifier representing the category
      parent_category_id:
        type: string
        description: Unique identifier representing the parent category
      name:
        type: string
        description: Display name of the category
      _links:
        type: array
        items: 
          $ref: '#/definitions/Link'
  Product:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing the product
      category_id:
        type: string
        description: Unique identifier representing the Category of the product
      name:
        type: string
        required: true
        description: the display name of the product_id
      description:
        type: string
        description: the description of the product
      active:
        type: boolean
        description: Is the product active?
      taxable:
        type: boolean
        description: Is the product taxable?
      retail_price:
        type: number
        format: double
      commissionable_volume:
        type: number
        format: double
      commission:
        type: number
        format: double
      image_path:
        type: string
        description: URL for an image of the product
      tags:
        type: array
        items:
          type: string
      unit_of_measure:
        type: string
        description: The unit of measure for quantity of the product
      stock_status:
        required: true
        $ref: '#/defintions/StockStatus'
        description: The status of the product
      _links:
        type: array
        items: 
          $ref: '#/definitions/Link'
  StockStatus:
    type: string
    enum:
      - InStock
      - OutOfStock
      - Discontinued
      - Recalled
      - BackOrdered
  Link:
    type: object
    properties:
     rel:
       type: string
       description: a url to this item.
     href:
       type: string
       description: the url to take the action.


